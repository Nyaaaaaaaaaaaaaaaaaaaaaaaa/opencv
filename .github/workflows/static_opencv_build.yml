name: Build Static OpenCV on Demand

# 触发工作流的事件
on:
  # 允许手动触发
  workflow_dispatch:
    inputs:
      # 定义手动触发时需要填写的参数
      opencv_version:
        description: '要编译的 OpenCV 版本 (e.g., 4.9.0)'
        required: true
        default: '4.9.0' # 提供一个默认值

env:
  # 从输入参数中获取 OpenCV 版本
  OPENCV_VERSION: ${{ github.event.inputs.opencv_version }}
  # 设置安装路径，以便于打包
  INSTALL_DIR: ${{ github.workspace }}/opencv_static_install

jobs:
  build-linux-static:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout OpenCV Source Code
        uses: actions/checkout@v4
        with:
          # 下载 OpenCV 源码的仓库
          repository: opencv/opencv
          # 使用用户输入的版本号检出
          ref: ${{ env.OPENCV_VERSION }} 

      - name: Install Dependencies
        run: |
          # 安装构建 OpenCV 所需的基本工具和库
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libssl-dev libtbb-dev

      - name: Configure CMake for Static Build
        # -DBUILD_SHARED_LIBS=OFF: 确保构建静态库 (.a)
        # 禁用 Python、GUI、测试和示例等不必要的模块和功能
        run: |
          mkdir build
          cd build
          cmake .. \
            -DBUILD_SHARED_LIBS=OFF \
            -DBUILD_TESTS=OFF \
            -DBUILD_PERF_TESTS=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_DOCS=OFF \
            -DINSTALL_C_EXAMPLES=OFF \
            -DINSTALL_PYTHON_EXAMPLES=OFF \
            -DBUILD_opencv_python2=OFF \
            -DBUILD_opencv_python3=OFF \
            -DWITH_QT=OFF \
            -DWITH_GTK=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}

      - name: Build OpenCV
        # 使用多核加速编译
        run: cmake --build build -j $(nproc)

      - name: Install Static Libraries and Headers
        # 将编译结果复制到 INSTALL_DIR
        run: cmake --install build

      - name: Package Static Libraries
        # 将安装目录打包成一个 ZIP 文件
        run: |
          cd ${{ env.INSTALL_DIR }}
          # 打包文件名为 opencv-static-{version}-linux-x64.zip
          zip -r opencv-static-${{ env.OPENCV_VERSION }}-linux-x64.zip *
          # 移动到工作目录根目录，以便于 Release 步骤访问
          mv opencv-static-${{ env.OPENCV_VERSION }}-linux-x64.zip ${{ github.workspace }}/

      - name: Create Release
        # 使用用户输入的版本号作为 Release 名称，并上传打包文件
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ github.workspace }}/opencv-static-${{ env.OPENCV_VERSION }}-linux-x64.zip
          name: OpenCV Static Build ${{ env.OPENCV_VERSION }} (Linux x64)
          tag_name: opencv-static-${{ env.OPENCV_VERSION }} # 使用一个固定的 tag 命名格式
          draft: false
          prerelease: false
